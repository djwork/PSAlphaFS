<?xml version="1.0" encoding="utf-8" ?>
<helpItems xmlns="http://msh" schema="maml">
	<!--Edited with: SAPIEN PowerShell HelpWriter 2016 v1.1.20-->
	<!--Generated by: SAPIEN PowerShell HelpWriter 2016 v1.1.20-->
	<!--
		Module: 		PSAlphaFS
		Version:		2.0.0.0
	-->
	<!--All Commands-->
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-LongDirectorySize</command:name>
			<maml:description>
				<maml:para>Gets the properties of a directory without following any symbolic links or mount points.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>LongDirectorySize</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Properties include aggregated info from FileAttributes of each encountered file system object, plus additional ones: Total, File, Size and Error.
Total: is the total number of enumerated objects.
File: is the total number of files. File is considered when object is neither Directory nor ReparsePoint.
Size: is the total size(bytes) of enumerated objects.
Error: is the total number of errors encountered during enumeration.
Note: Reparsepoint count will always be 0 because they are skipped by default.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-LongDirectorySize</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>The target directory.This value can be a relative or an aboslute path</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>CurrentDirectory</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Recurse</maml:name>
					<maml:description>
						<maml:para>Enumerates files and folders in sub-directories</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ContinueonError</maml:name>
					<maml:description>
						<maml:para>Suppress any Exception that might be thrown as a result from a failure, such as ACLs protected directories or non-accessible reparse points.
Note: using this switch might result in an incorrect directory size.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>The target directory.This value can be a relative or an aboslute path</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>CurrentDirectory</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Recurse</maml:name>
				<maml:description>
					<maml:para>Enumerates files and folders in sub-directories</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ContinueonError</maml:name>
				<maml:description>
					<maml:para>Suppress any Exception that might be thrown as a result from a failure, such as ACLs protected directories or non-accessible reparse points.
Note: using this switch might result in an incorrect directory size.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Hashtable</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongDirectorySize -Path D:\Github -Recurse

Key                 Value
---                 -----
Archive               321
Compressed              0
Device                  0
Directory             201
Encrypted               0
Hidden                  1
IntegrityStream         0
Normal                  0
NoScrubData             0
NotContentIndexed       0
Offline                 0
ReadOnly              264
ReparsePoint            0
SparseFile              0
System                  0
Temporary               0
File                  321
Total                 522
Size              3069696
SizeinMB                3
				</dev:code>
				<dev:remarks>
					<maml:para>Gets the directory statistics for D:\Github, optionally enumerating the subfolders and files.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongDirectorySize -ContinueonError</dev:code>
				<dev:remarks>
					<maml:para>Enumerates the files and folders in the current directory, and will ignore any exceptions\errors that may arise due to access or other issues.
Warning: using the -ContinueonError may result in an incorrect directory size.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$githubDIR = Get-LongDirectorySize D:\Github -Recurse

$githubDIR.Size
3069696

$githubDIR.SizeinMB
3

PS C:\temp\dsc&gt; </dev:code>
				<dev:remarks>
					<maml:para>The first command assigns the out of the cmdlet Get-LongDirectorySize to the variable github
the second command is used to access the size of the directory in bytes.
the third command lists the size in megabytes.

Note: the unit of size kb\mb\gb\tb will change based on the size of the directory.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Remove-LongItem</command:name>
			<maml:description>
				<maml:para>Deletes specified item.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Remove</command:verb>
			<command:noun>LongItem</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Remove-LongItem cmdlet deletes filesystem items.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Remove-LongItem</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Specifies a path to the items being removed. Wildcards are NOT permitted. The parameter name (&quot;-Path&quot;) is optional.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Recurse</maml:name>
					<maml:description>
						<maml:para>Deletes the items in the specified locations and in all child items of the locations.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Allows the cmdlet to remove items that cannot otherwise be changed, such as read-only files.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies a path to the items being removed. Wildcards are NOT permitted. The parameter name (&quot;-Path&quot;) is optional.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recurse</maml:name>
				<maml:description>
					<maml:para>Deletes the items in the specified locations and in all child items of the locations.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Allows the cmdlet to remove items that cannot otherwise be changed, such as read-only files.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
					<maml:para/>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para>This cmdlet does not return any output.</maml:para>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title/>
			<maml:alert>
				<maml:para/>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Remove-LongItem -Path C:\temp\folder3\drivers.txt -force</dev:code>
				<dev:remarks>
					<maml:para>This command deletes a file that is read-only. It uses the Path parameter to specify the file. It uses the Force parameter to give permission to delete it. Without Force, you cannot delete read-only files.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Remove-LongItem -path C:\temp\folder7\filenames -Recurse</dev:code>
				<dev:remarks>
					<maml:para>This command deletes the folder &apos;filenames&apos; including all files and sub-folders.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Move-LongItem</command:name>
			<maml:description>
				<maml:para>Move file\folders</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Move</command:verb>
			<command:noun>LongItem</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Moves an item from one location to another.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Move-LongItem</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Specifies the path to the current location of the item.Wildcards are NOT permitted.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1">
					<maml:name>Destination</maml:name>
					<maml:description>
						<maml:para>Specifies the path to the location where the items are being moved.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Allows the cmdlet to move an item that writes over an existing read-only item</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the current location of the item.Wildcards are NOT permitted.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1">
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the location where the items are being moved.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Allows the cmdlet to move an item that writes over an existing read-only item</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
					<maml:para/>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para>This cmdlet does not return any output.</maml:para>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Move-LongItem -path C:\temp\test.txt -destination C:\Temp\folder1\tst.txt</dev:code>
				<dev:remarks>
					<maml:para>This command moves the Test.txt file from the C:\temp to the C:\Temp\folder1 directory and renames it from &quot;test.txt&quot; to &quot;tst.txt&quot;.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Move-LongItem  -Path C:\temp\logfiles -Destination C:\temp\newlogfiles</dev:code>
				<dev:remarks>
					<maml:para>This command moves the C:\Temp\logfiles directory and its contents to the C:\temp\newLogfiles directory. The logfiles directory, and all of its subdirectories and files, then appear in the newLogfiles directory.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongChildItem -Path C:\temp -Filter *.csv -Recurse  | Move-longItem -Destination C:\temp\logs -Verbose</dev:code>
				<dev:remarks>
					<maml:para>This command moves all of the csv files from the c:\temp directory and all subdirectories, recursively, to the C:\temp\logs directory.

The command uses the Get-LongChildItem cmdlet to get all of the child items in the temp directory and its subdirectories that have a *.csv file name extension. It uses the Recurse parameter to make the retrieval recursive and the filter parameter to limit the retrieval to *.csv files.

The pipeline operator (|) sends the results of this command to Move-LongItem, which moves the csv files to the logs directory.

If files being moved to C:\temp\logs have the same name, Move-LongItem displays an warning and continues, but it moves only one file with each name to C:\temp\logs. The other files remain in their original directories.

If the logs directory (or any other element of the destination path) does not exist, the command fails. The missing directory is not created for you, even if you use the Force parameter.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Mount-LongShare</command:name>
			<maml:description>
				<maml:para>Maps network drive</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Mount</command:verb>
			<command:noun>LongShare</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Map a network share to a local drive</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Mount-LongShare</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<maml:name>DriveLetter</maml:name>
					<maml:description>
						<maml:para>The name of a local device\drive to be redirected, such as &quot;F:&quot;.
Note: you may omit the &apos;:&apos; in the drive letter, e.g. F</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="">
					<maml:name>NetWorkShare</maml:name>
					<maml:description>
						<maml:para>The network resource to connect to. The string can be up to MAX_PATH characters in length.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Mount-LongShare</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<maml:name>DriveLetter</maml:name>
					<maml:description>
						<maml:para>The name of a local device\drive to be redirected, such as &quot;F:&quot;.
Note: you may omit the &apos;:&apos; in the drive letter, e.g. F</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="">
					<maml:name>NetWorkShare</maml:name>
					<maml:description>
						<maml:para>The network resource to connect to. The string can be up to MAX_PATH characters in length.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="">
					<maml:name>Credential</maml:name>
					<maml:description>
						<maml:para>An instance of PSCredential which provides credentials for password-based authentication used to gain access to network resources that are restricted.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<maml:name>DriveLetter</maml:name>
				<maml:description>
					<maml:para>The name of a local device\drive to be redirected, such as &quot;F:&quot;.
Note: you may omit the &apos;:&apos; in the drive letter, e.g. F</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="">
				<maml:name>NetWorkShare</maml:name>
				<maml:description>
					<maml:para>The network resource to connect to. The string can be up to MAX_PATH characters in length.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>An instance of PSCredential which provides credentials for password-based authentication used to gain access to network resources that are restricted.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
				<dev:type>
					<maml:name>PSCredential</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String,
System.Management.Automation.PSCredential
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>none</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Mount-LongShare -DriveLetter Z: -NetWorkShare \\contoso\share1 -Verbose</dev:code>
				<dev:remarks>
					<maml:para>Maps the network share named share1 to the local drive Z:</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Mount-LongShare -DriveLetter F: -NetWorkShare \\contoso\share1 -Credential (Get-Credential)</dev:code>
				<dev:remarks>
					<maml:para>the credential parameter is used to pass alternate credentials to access the network share &quot;share1&quot; and map it to drive F:</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$cred = Get-Credential
Mount-LongShare -DriveLetter G: -NetWorkShare \\contoso\share1 -Credential $cred</dev:code>
				<dev:remarks>
					<maml:para>the get-credential cmdlet is used to store credentials in the variable &apos;cred&apos;
the cred variable is then passed to the credential parameter in Mount-LongShare to map Share1 to Drive G:</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Copy-LongItem</command:name>
			<maml:description>
				<maml:para>Copies an item from one location to another.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Copy</command:verb>
			<command:noun>LongItem</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Copy-LongItem cmdlet copies an item from one location to another location in the filesystem provider.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Copy-LongItem</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Specifies the path to the items to copy.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1">
					<maml:name>Destination</maml:name>
					<maml:description>
						<maml:para>Specifies the path to the new location. To rename a copied item, include the new name in the value.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Allows the cmdlet to copy items that cannot otherwise be changed, such as copying over an existing file or directory.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>NoBuffering</maml:name>
					<maml:description>
						<maml:para>The copy operation is performed using unbuffered I/O, bypassing system I/O cache resources. Recommended for very large file transfers.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>AllowDecryptedDestination</maml:name>
					<maml:description>
						<maml:para>An attempt to copy an encrypted file will succeed even if the destination copy cannot be encrypted.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the items to copy.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>None</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1">
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the new location. To rename a copied item, include the new name in the value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>None</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Allows the cmdlet to copy items that cannot otherwise be changed, such as copying over an existing file or directory.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>NoBuffering</maml:name>
				<maml:description>
					<maml:para>The copy operation is performed using unbuffered I/O, bypassing system I/O cache resources. Recommended for very large file transfers.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>AllowDecryptedDestination</maml:name>
				<maml:description>
					<maml:para>An attempt to copy an encrypted file will succeed even if the destination copy cannot be encrypted.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
					<maml:para/>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para>This cmdlet does not return any output.</maml:para>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title>Copy-LongItem</maml:title>
			<maml:alert>
				<maml:para>Copy-LongItem is like the &#39;cp&#39; or &#39;copy&#39; commands in other shells.
By default the recurse flag is set so a folder copy operation is always recursive.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Copy-LongItem -Path C:\temp\drivers.txt -Destination C:\temp\folder1 -Verbose</dev:code>
				<dev:remarks>
					<maml:para>This command copies the drivers.txt file to the C:\temp\folder1 directory. &apos;folder1&apos; is created if it dosent exist.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Copy-LongItem C:\temp\logfiles -Destination C:\temp\newlogs</dev:code>
				<dev:remarks>
					<maml:para>This command copies the contents of the C:\Logfiles directory recursively to the C:\temp\newLogs directory. It creates the \newLogs subdirectory if it does not already exist.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Copy-LongItem -Path C:\temp\win2012R2.iso -Destination C:\temp\2012R2.iso -Verbose -NoBuffering</dev:code>
				<dev:remarks>
					<maml:para>attempts to copy the iso file using unbuffered I/O</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-LongChildItem</command:name>
			<maml:description>
				<maml:para>Gets the items and child items in one or more specified locations.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>LongChildItem</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-LongChildItem cmdlet gets the items in one or more specified locations. If the item is a container, it gets the items inside the container, known as child items. You can use the Recurse parameter to get items in all child containers.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-LongChildItem</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Specifies a path to one or more locations. Wildcards are NOT permitted. The default location is the current directory.
Path can be relative or absolute.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>current directory</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="1">
					<maml:name>Filter</maml:name>
					<maml:description>
						<maml:para>The value of this parameter qualifies the Path parameter. Filters are more efficient than other parameters, because the provider applies them when retrieving the objects, rather than having Windows PowerShell filter the objects after they are retrieved.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Recurse</maml:name>
					<maml:description>
						<maml:para>Gets the items in the specified locations and in all child items of the locations.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
					<maml:name>Include</maml:name>
					<maml:description>
						<maml:para>Gets only the specified items. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as &quot;*.txt&quot;. Wildcards are permitted.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
					<maml:name>Exclude</maml:name>
					<maml:description>
						<maml:para>Omits the specified items. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as &quot;*.txt&quot;. Wildcards are permitted.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Directory</maml:name>
					<maml:description>
						<maml:para>Gets only the container items in the locations omitting all files.In other words lists only folders and not files.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>File</maml:name>
					<maml:description>
						<maml:para>Gets only the file items in the locations omitting all container\directory items.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue>None</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Gets only the names of the items in the locations. If you pipe the output of this command to another command, only the item names are sent.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>SkipSymbolicLink</maml:name>
					<maml:description>
						<maml:para>When this switch is used the enumeration will skip over any symboliclinks in the path.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies a path to one or more locations. Wildcards are NOT permitted. The default location is the current directory.
Path can be relative or absolute.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>current directory</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="1">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>The value of this parameter qualifies the Path parameter. Filters are more efficient than other parameters, because the provider applies them when retrieving the objects, rather than having Windows PowerShell filter the objects after they are retrieved.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>None</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recurse</maml:name>
				<maml:description>
					<maml:para>Gets the items in the specified locations and in all child items of the locations.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>false</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Gets only the specified items. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as &quot;*.txt&quot;. Wildcards are permitted.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>None</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Omits the specified items. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as &quot;*.txt&quot;. Wildcards are permitted.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>None</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Directory</maml:name>
				<maml:description>
					<maml:para>Gets only the container items in the locations omitting all files.In other words lists only folders and not files.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>File</maml:name>
				<maml:description>
					<maml:para>Gets only the file items in the locations omitting all container\directory items.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>None</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Gets only the names of the items in the locations. If you pipe the output of this command to another command, only the item names are sent.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>None</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>SkipSymbolicLink</maml:name>
				<maml:description>
					<maml:para>When this switch is used the enumeration will skip over any symboliclinks in the path.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para>You can pipe a string that contains a path to Get-LongChildItem.</maml:para>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Alphaleonis.Win32.Filesystem.FileInfo</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para>For more information see:
http://alphafs.alphaleonis.com/doc/2.0/api/html/C308A5E5.htm</maml:para>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:returnValue>
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para>If you use the Name parameter, Get-ChildItem returns the object names as strings.</maml:para>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title/>
			<maml:alert>
				<maml:para>You can also refer to Get-LongChildItem by its built-in aliases &quot;ldir&quot;, and &quot;lgci&quot;. For more information, see about_Aliases.

Get-LongChildItem gets hidden items by default.

The Get-LongChildItem cmdlet is designed to work with the data exposed by the AlphaFS  Filesystem provider and will NOT work with any other providers E.g.,Registry,Certificates etc

For more information, see (http://alphafs.alphaleonis.com/doc/2.0/api/html/7C1374.htm).</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongChildItem -Path C:\temp -Filter d*.txt -Recurse


   Directory: C:\temp

Mode                  LastWriteTime          Length Name                                                                         
----                  -------------          ------ ----                                                                         
File            6/27/2015  11:44 AM            1488 drivers.txt                                                                  
File             7/3/2015  12:30 PM              72 dupes.txt                                                                    


   Directory: C:\temp\folder4\DSC06252

Mode                  LastWriteTime          Length Name                                                                         
----                  -------------          ------ ----                                                                         
File            8/23/2015   6:24 PM              93 dupes.txt</dev:code>
				<dev:remarks>
					<maml:para>This command gets all of the files that begin with the letter &apos;d&apos; followed by any character(s) but end with the extension &apos;TXT&apos; in the path directory and its subdirectories. The Recurse parameter directs Windows PowerShell to get objects recursively, and it indicates that the subject of the command is the specified directory and its contents.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongChildItem –Path C:\temp -Include *.txt -Exclude A*,c*,e*</dev:code>
				<dev:remarks>
					<maml:para>This command lists the .txt files in the temp directory, except for those whose names start with the letter A or C or E.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongChildItem –Path C:\windows\System32\WindowsPowerShell -Filter about*.txt  -Recurse -Name</dev:code>
				<dev:remarks>
					<maml:para>This command gets only the names of all Text files that begin with &apos;about&apos; in the C:\windows\System32\WindowsPowerShell directory and its subdirectories.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongChildItem –Path C:\temp -Name -Directory -Recurse</dev:code>
				<dev:remarks>
					<maml:para>This command gets only the names of all directories in the C:\temp directory and its subdirectories.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongChildItem -Path C:\temp -Recurse | Where PathLength -gt 260</dev:code>
				<dev:remarks>
					<maml:para>This command gets all files and folders recursively. The output is then piped to Where-object which displays only those files whose length exceeds the windows API 260 character length limitation.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongChildItem -Path D:\Temp


   Directory: D:\Temp

Mode                  LastWriteTime          Length Name                                                                                                                                         
----                  -------------          ------ ----                                                                                                                                         
Directory      12/5/2016   9:44 PM                 123                                                                                                                                          
File           12/23/2016   2:46 PM            9491 temp.ps1                                                                                                                                                                  SymLink-f      12/7/2016   7:21 PM               0 MySymLinkFile.txt                                                                                                                            
SymLink-f      12/17/2016  12:38 PM               0 MySymLinkFile2.txt                                                                                                                                                        SymLink-d      12/17/2016  12:47 PM                 symfolder1                                                                                                                                   
SymLink-d      12/17/2016  12:49 PM                 symfolder2                                                                                                                                   
File           12/25/2016   2:10 AM            4405 test.ps1                                                                                                                                     
File           12/11/2016   1:52 PM               3 testfile1.txt                                                                                                                                
Directory      12/11/2016   2:26 PM                 testmodule                                                                                                                                   
File           12/11/2016   2:02 PM               3 thirdfile.txt       </dev:code>
				<dev:remarks>
					<maml:para>The mode property now shows whether a file or folder is a symlink(symboliclink) and additionaly indicates whether the type is a file or a directory</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 7 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongChildItem -Path D:\Temp -SkipSymbolicLink


   Directory: D:\Temp

Mode                  LastWriteTime          Length Name                                                                                                                                         
----                  -------------          ------ ----                                                                                                                                         
Directory      12/5/2016   9:44 PM                 123                                                                                                                                          
File           12/23/2016   2:46 PM            9491 temp.ps1                                                                                                                                                                  File           12/25/2016   2:10 AM            4405 test.ps1                                                                                                                                     
File           12/11/2016   1:52 PM               3 testfile1.txt                                                                                                                                
Directory      12/11/2016   2:26 PM                 testmodule                                                                                                                                   
File           12/11/2016   2:02 PM               3 thirdfile.txt  </dev:code>
				<dev:remarks>
					<maml:para>lists all items in d:\temp with the exception of symboliclinks</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 8 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\temp&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongChildItem testdir</dev:code>
				<dev:remarks>
					<maml:para>gets items from the folder &apos;testdir&apos; located in c:\temp</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-LongDiskDrive</command:name>
			<maml:description>
				<maml:para>List local and mapped drives on the local machine along with their size,freespace and usedspace.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>LongDiskDrive</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Includes size percentage as well.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-LongDiskDrive</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Alphaleonis.Win32.Filesystem.DriveInfo</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongDiskDrive

DriveLetter VolumeLabel FileSystem DriveType FreePercent UsedPercent    Free      Used     Size
----------- ----------- ---------- --------- ----------- -----------    ----      ----     ----
A:\                     Unknown    Removable       0.00%       0.00%     0 B       0 B      0 B
C:\                     NTFS       Fixed          19.83%      80.17% 9.84 GB  39.81 GB 49.66 GB
D:\         Source      NTFS       Fixed          32.67%      67.33% 6.53 GB  13.46 GB    20 GB
E:\         Pagefile    NTFS       Fixed          98.75%       1.25% 9.87 GB 128.41 MB    10 GB
F:\                     Unknown    CDRom           0.00%       0.00%     0 B       0 B      0 B</dev:code>
				<dev:remarks>
					<maml:para>Lists disk drive stats such as disk space,free used percent etc.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-LongMappedDrive</command:name>
			<maml:description>
				<maml:para>List mapped drives</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>LongMappedDrive</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Lists all mapped network drives on the local machine.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-LongMappedDrive</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Alphaleonis.Win32.Filesystem.DriveInfo</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongMappedDrive | fl *

UncPath               : \\Contoso\Share1\
DriveLetter           : H:\
FileSystem            : NTFS
FreePercent           : 11.61%
UsedPercent           : 88.39%
Free                  : 5.79 GB
Used                  : 44.11 GB
Size                  : 49.9 GB
AvailableFreeSpace    : 6217994240
DriveFormat           : NTFS
DriveType             : Network
IsReady               : True
Name                  : H:\
RootDirectory         : H:\
TotalFreeSpace        : 6217994240
TotalSize             : 53580132352
VolumeLabel           : 
DiskSpaceInfo         : H:\
DosDeviceName         : H:
IsDosDeviceSubstitute : False
IsUnc                 : True
IsVolume              : True
VolumeInfo            : </dev:code>
				<dev:remarks>
					<maml:para>Lists any mapped drives on the local machine</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>DisMount-LongShare</command:name>
			<maml:description>
				<maml:para>
				</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>DisMount</command:verb>
			<command:noun>LongShare</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Remove a mapped drive</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>DisMount-LongShare</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="">
					<maml:name>DriveLetter</maml:name>
					<maml:description>
						<maml:para>The name of a local device to be disconnected, such as &quot;F:&quot;.
Note: you may omit the &apos;:&apos; in the drive letter, e.g. F</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Specifies whether the disconnection should occur if there are open files or jobs on the connection. 
If this parameter is false or not specified, the function fails if there are open files or jobs
Warning: this may result in loss of unsaved changed so use with care.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="">
				<maml:name>DriveLetter</maml:name>
				<maml:description>
					<maml:para>The name of a local device to be disconnected, such as &quot;F:&quot;.
Note: you may omit the &apos;:&apos; in the drive letter, e.g. F</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Specifies whether the disconnection should occur if there are open files or jobs on the connection. 
If this parameter is false or not specified, the function fails if there are open files or jobs
Warning: this may result in loss of unsaved changed so use with care.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>none</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>DisMount-LongShare -DriveLetter F: </dev:code>
				<dev:remarks>
					<maml:para>Unmounts any network share that is mounted on F:</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>DisMount-LongShare -DriveLetter G -Force </dev:code>
				<dev:remarks>
					<maml:para>Any open files or connections to the G drive are dropped and then the G drive is unmounted .
					</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-LongItem</command:name>
			<maml:description>
				<maml:para/>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>LongItem</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-LongItem cmdlet gets the item at the specified location and not the contents of the item at the location.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-LongItem</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Specifies the path to an item. Get-Item gets the item at the specified location. Wildcards are NOT permitted. This parameter is required, but the parameter name (&quot;Path&quot;) is optional.
Path may be relative or absolute</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>None</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to an item. Get-Item gets the item at the specified location. Wildcards are NOT permitted. This parameter is required, but the parameter name (&quot;Path&quot;) is optional.
Path may be relative or absolute</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>None</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para>You can pipe a string that contains a path to Get-LongItem.</maml:para>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Alphaleonis.Win32.Filesystem.FileInfo</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para>For more information see:
http://alphafs.alphaleonis.com/doc/2.0/api/html/C308A5E5.htm</maml:para>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title/>
			<maml:alert>
				<maml:para>Get-LongItem does not have a Recurse parameter, because it gets only an item, not its contents. To get the contents of an item recursively, use Get-LongChildItem.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongItem C:\temp</dev:code>
				<dev:remarks>
					<maml:para>This command gets the &apos;fileinfo&apos; for the directory C:\temp. The object that is retrieved represents only the directory, not its contents.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Rename-LongItem</command:name>
			<maml:description>
				<maml:para>Renames an item in a AlphaFS FileSystem provider namespace.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Rename</command:verb>
			<command:noun>LongItem</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Rename-LongItem cmdlet changes the name of a specified item. This cmdlet does not affect the content of the item being renamed.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Rename-LongItem</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Specifies the path to the item to rename.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1">
					<maml:name>NewName</maml:name>
					<maml:description>
						<maml:para>Specifies the new name of the item. Enter only a name, not a path and name.

You cannot use wildcard characters in the value of NewName. To specify a name for multiple files, use the Replace operator in a regular expression. For more information about the Replace operator, type &quot;get-help about_comparison_operators&quot;. For a demonstration, see the examples.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Allows the cmdlet to rename items that cannot otherwise be changed, such as read-only files.
Warning: existing files will be replaced when used with this switch</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Rename-LongItem</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Specifies the path to the item to rename.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="">
					<maml:name>NewExtension</maml:name>
					<maml:description>
						<maml:para>Reanme only the file extension while retaining the file name.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Allows the cmdlet to rename items that cannot otherwise be changed, such as read-only files.
Warning: existing files will be replaced when used with this switch</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the item to rename.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1">
				<maml:name>NewName</maml:name>
				<maml:description>
					<maml:para>Specifies the new name of the item. Enter only a name, not a path and name.

You cannot use wildcard characters in the value of NewName. To specify a name for multiple files, use the Replace operator in a regular expression. For more information about the Replace operator, type &quot;get-help about_comparison_operators&quot;. For a demonstration, see the examples.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Allows the cmdlet to rename items that cannot otherwise be changed, such as read-only files.
Warning: existing files will be replaced when used with this switch</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="">
				<maml:name>NewExtension</maml:name>
				<maml:description>
					<maml:para>Reanme only the file extension while retaining the file name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
					<maml:para/>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para>This cmdlet does not return any output.</maml:para>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Rename-LongItem -path C:\temp\drivers.txt -NewName d1.txt -Verbose -Confirm:$false</dev:code>
				<dev:remarks>
					<maml:para>This command renames the file drivers.txt to d1.txt</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongChildItem -Path C:\temp\drivers.txt |
    Rename-LongItem -NewName {&#39;prefix&#39; + $_.basename + &#39;Suffix&#39; + $_.extension }</dev:code>
				<dev:remarks>
					<maml:para>the file &apos;drivers.txt&apos; is renamed by piping the output of &apos;Get-LongChildItem&apos; to Rename-LongItem. The newfilename is created by adding a prefix and a suffix to the filename resulting in the following newname: &apos;PrefixdriversSuffix.txt&apos;.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ChildItem -Path C:\temp -Filter *.txt | Rename-LongItem -NewExtension log -Confirm:$false

VERBOSE: Performing the operation &quot;Changing Extension&quot; on target &quot;Item:	C:\temp\d1.txt	Destination:	C:\temp\d1.log&quot;.
VERBOSE: Rename-LongItem:
 C:\temp\d1.txt 
		C:\temp\d1.log

VERBOSE: Performing the operation &quot;Changing Extension&quot; on target &quot;Item:	C:\temp\d2.txt	Destination:	C:\temp\d2.log&quot;.
VERBOSE: Rename-LongItem:
 C:\temp\d2.txt 
		C:\temp\d2.log</dev:code>
				<dev:remarks>
					<maml:para>This command gets all the text files in c:\temp and pipes them to Rename-LongItem which then renames each text file extension from *.txt to *.log
Note: the name os the file is retained(in other words remains unchanged)</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-LongFreeDriveLetter</command:name>
			<maml:description>
				<maml:para>List free or available drive letters on the local machine

Get-LongFreeDriveLetter [-Last] [&lt;CommonParameters&gt;]</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>LongFreeDriveLetter</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>By default this cmdlet gets the first available drive letter.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-LongFreeDriveLetter</maml:name>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-LongFreeDriveLetter</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Last</maml:name>
					<maml:description>
						<maml:para>When true get the last available drive letter. </maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Last</maml:name>
				<maml:description>
					<maml:para>When true get the last available drive letter. </maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongFreeDriveLetter -Verbose
VERBOSE: Get-LongFreeDriveLetter:	 Listing the first free DriveLetter
G</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongFreeDriveLetter -Last -Verbose
VERBOSE: Get-LongFreeDriveLetter:	 Listing the Last free DriveLetter
Z</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>New-LongItem</command:name>
			<maml:description>
				<maml:para>Creates new file,folder,symboliclink or hardlink items.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>New</command:verb>
			<command:noun>LongItem</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The New-LongItem cmdlet creates new files or folders depending upon the parameters that are used.This cmdlet can only create filesystem items(file or folder).</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>New-LongItem</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Specifies the path to the location of the new item. Wildcards are NOT permitted.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Type">
					<maml:name>ItemType</maml:name>
					<maml:description>
						<maml:para>Specifies whether you want to create a file or a folder.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Target">
					<maml:name>Value</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Encoding</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Allows the cmdlet to create an item that writes over an existing read-only item.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>New-LongItem</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Specifies the path to the location of the new item. Wildcards are NOT permitted.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Type">
					<maml:name>ItemType</maml:name>
					<maml:description>
						<maml:para>Specifies whether you want to create a file or a folder.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Target">
					<maml:name>Value</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Encoding</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="LinkName">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Specifies the name of the new item.
You can specify the name of the new item in the Name or Path parameter value, and you can specify the path to the new item in the Name or Path parameter value.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Allows the cmdlet to create an item that writes over an existing read-only item.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the location of the new item. Wildcards are NOT permitted.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Type">
				<maml:name>ItemType</maml:name>
				<maml:description>
					<maml:para>Specifies whether you want to create a file or a folder.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Target">
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Encoding</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Allows the cmdlet to create an item that writes over an existing read-only item.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="LinkName">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the new item.
You can specify the name of the new item in the Name or Path parameter value, and you can specify the path to the new item in the Name or Path parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
					<maml:para/>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Alphaleonis.Win32.Filesystem.FileInfo</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para>For more information see:
http://alphafs.alphaleonis.com/doc/2.0/api/html/C308A5E5.htm</maml:para>
					<maml:para/>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>New-Longitem -path c:\temp -name logfiles -itemtype directory</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>New-LongItem -ItemType File  -path &#39;c:\temp\test.txt&#39;, &#39;c:\temp\logs\test.log&#39;</dev:code>
				<dev:remarks>
					<maml:para>This command uses the New-LongItem cmdlet to create files in two different directories. Because the Path parameter takes multiple strings, you can use it to create multiple items.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>New-LongItem -Path C:\temp\123\456\hello.txt -Verbose</dev:code>
				<dev:remarks>
					<maml:para>The New-LongItem cmdlet is used to create the directory tree &apos;123&apos;\&apos;456&apos; which dosent exist and then finally a text file &apos;hello.txt&apos; inside the &apos;456&apos; directory.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>New-LongItem -Path c:\temp\test.txt -ItemType File -Force -Value &quot;1st Line&quot;,&quot;2nd Line&quot; -Encoding UTF8</dev:code>
				<dev:remarks>
					<maml:para>Create a text file named test.txt and write 2 lines separated by a line break with UTF8 encoding.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>New-LongItem -Name test -ItemType Directory</dev:code>
				<dev:remarks>
					<maml:para>a directory named test is created in the current working directory</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>New-LongItem -Name c:\temp\test.txt</dev:code>
				<dev:remarks>
					<maml:para>we use the name parameter instead of path to create a text file named test.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 7 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>New-LongItem -Path C:\temp\MySymlink.txt -Value C:\temp\test.txt -ItemType SymbolicLink</dev:code>
				<dev:remarks>
					<maml:para>a symbolic link named mysymlink.txt is created for an existing file named test located at c:\temp</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 8 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>New-LongItem -Name MySymlink -Value C:\temp -ItemType SymbolicLink -Force</dev:code>
				<dev:remarks>
					<maml:para>a symboliclink named mysymlink is created for c:\temp in the current directory. 
Note: since the -Force switch is used any existing symlink named mysymlink will be overwritten.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 9 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>New-LongItem -Path C:\temp\MyHardlink.txt -Value C:\temp\test.txt -ItemType HardLink</dev:code>
				<dev:remarks>
					<maml:para>a hardlink named myhardlink is created for the existing file at c:\temp\test.txt</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<!--Generated by: SAPIEN PowerShell HelpWriter 2016 v1.1.20-->
	<!--Edited with: SAPIEN PowerShell HelpWriter 2016 v1.1.20-->
</helpItems>